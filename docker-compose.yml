services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ./db/.env
    environment:
      - POSTGRES_DB=plexapp
      - POSTGRES_USER=plexuser
      - POSTGRES_PASSWORD=plexpass
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./app/backend
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - ./app/backend/.env
    depends_on:
      db:
        condition: service_healthy
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/plex/status"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8000:8000"
    environment:
      - PLEX_SERVER_ADDRESS=http://172.16.1.5:32400

  frontend:
    build:
      context: ./moodie-next
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - ./moodie-next/.env
    # Ensure NEXT_PUBLIC_PLEX_TOKEN is set in moodie-next/.env for static Plex token support
    depends_on:
      - backend
    expose:
      - 3000
    ports:
      - "3000:3000"

  # Optional: Nginx reverse proxy for SSL/static/routing
  # nginx:
  #   image: nginx:alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   environment:
  #     - NGINX_HOST=yourdomain.com
  #     - NGINX_PORT=80

volumes:
  db_data: 